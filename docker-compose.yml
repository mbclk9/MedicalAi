# TÄ±pScribe Docker Compose Configuration
version: '3.8'

services:
  # Main application
  app:
    build: .
    container_name: tipscribe_app
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgresql://tipscribe:tipscribe123@db:5432/tipscribe_db
      - DEEPGRAM_API_KEY=${DEEPGRAM_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    restart: unless-stopped
    networks:
      - tipscribe_network

  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: tipscribe_db
    environment:
      - POSTGRES_DB=tipscribe_db
      - POSTGRES_USER=tipscribe
      - POSTGRES_PASSWORD=tipscribe123
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tipscribe -d tipscribe_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - tipscribe_network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: tipscribe_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass tipscribe123
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - tipscribe_network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: tipscribe_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - tipscribe_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  tipscribe_network:
    driver: bridge

# Development override
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up